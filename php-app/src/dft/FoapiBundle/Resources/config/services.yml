parameters:
    # Code level services.
    dft_foapi.login.class: dft\FoapiBundle\Services\Login
    dft_foapi.menu_item.class: dft\FoapiBundle\Services\MenuItem
    dft_foapi.customer.class: dft\FoapiBundle\Services\Customer
    dft_foapi.printer_activity.class: dft\FoapiBundle\Services\PrinterActivity
    dft_foapi.order.class: dft\FoapiBundle\Services\Order
    dft_foapi.user.class: dft\FoapiBundle\Services\User
    dft_foapi.menu_item_categories.class: dft\FoapiBundle\Services\MenuItemCategories
    dft_foapi.restaurant_settings.class: dft\FoapiBundle\Services\RestaurantSettings

services:
    dft_foapi.login:
        class: %dft_foapi.login.class%
        arguments: [@service_container]
    dft_foapi.user:
        class: %dft_foapi.user.class%
        arguments: [@service_container]
    dft_foapi.order:
        class: %dft_foapi.order.class%
        arguments: [@service_container]
    dft_foapi.menu_item:
        class: %dft_foapi.menu_item.class%
        arguments: [@service_container]
    dft_foapi.menu_item_categories:
        class: %dft_foapi.menu_item_categories.class%
        arguments: [@service_container]
    dft_foapi.customer:
        class: %dft_foapi.customer.class%
        arguments: [@service_container]
    dft_foapi.printer_activity:
        class: %dft_foapi.printer_activity.class%
        arguments: [@service_container]
    dft_foapi.restaurant_settings:
        class: %dft_foapi.restaurant_settings.class%
        arguments: [@service_container]
    # Event listener for onKernelRequest, used for verifying if a user is authenticated.
    dft_foapi.request_listener:
        class: dft\FoapiBundle\EventListener\AuthenticationListener
        arguments: [@service_container, @router]
        tags:
          - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 0 }
    # Event listener for onKernelException, used for generating JSON formatted 404 responses.
        class: dft\FoapiBundle\EventListener\KernelExceptionListener
        arguments: [@templating, @kernel]
        tags:
          - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }